---
name: postgres_exporter
x-postgres: &postgres
  environment:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_DB: postgres
  ports:
    - "5432:5432"
  command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U postgres"]
    interval: 5s
    timeout: 5s
    retries: 5
  networks:
    postgres_exporter:
      aliases:
        - postgres

x-network: &network
  networks:
    - postgres_exporter

services:
  postgres13:
    <<: *postgres
    # renovate: datasource=docker depName=postgres versioning=docker
    # renovate: allowedVersions=13.x
    image: postgres:13.20@sha256:d714ce760cbf3572aa9f72d9f305f27de79b9e6bdbf81613cd4859df5408831e
    volumes:
      - postgres_data_13:/var/lib/postgresql/data
      - ./docker/postgresql.conf:/etc/postgresql/postgresql.conf
    profiles:
      - postgres13

  postgres14:
    <<: *postgres
    # renovate: datasource=docker depName=postgres versioning=docker
    # renovate: allowedVersions=14.x
    image: postgres:14.17@sha256:1e6c52c366e39e869184256c45757e1c85ba15b3d244b0a2cea640da6df1c4e3
    volumes:
      - postgres_data_14:/var/lib/postgresql/data
      - ./docker/postgresql.conf:/etc/postgresql/postgresql.conf
    profiles:
      - postgres14

  postgres15:
    # renovate: datasource=docker depName=postgres versioning=docker
    # renovate: allowedVersions=15.x
    <<: *postgres
    image: postgres:15.12@sha256:fe45ed1a824b81c0c9c605890963b67501758ca8c946db89089c85ce0f88e974
    volumes:
      - postgres_data_15:/var/lib/postgresql/data
      - ./docker/postgresql.conf:/etc/postgresql/postgresql.conf
    profiles:
      - postgres15

  postgres16:
    <<: *postgres
    # renovate: datasource=docker depName=postgres versioning=docker
    # renovate: allowedVersions=16.x
    image: postgres:16.8@sha256:cef2d22004db69e3d601442ca4cac142adda0987ad7ca4f28c4e998bef690951
    volumes:
      - postgres_data_16:/var/lib/postgresql/data
      - ./docker/postgresql.conf:/etc/postgresql/postgresql.conf
    profiles:
      - postgres16

  postgres17:
    # renovate: datasource=docker depName=postgres versioning=docker
    # renovate: allowedVersions=17.x
    <<: *postgres
    image: postgres:17.2@sha256:3267c505060a0052e5aa6e5175a7b41ab6b04da2f8c4540fc6e98a37210aa2d3
    volumes:
      - postgres_data_17:/var/lib/postgresql/data
      - ./docker/postgresql.conf:/etc/postgresql/postgresql.conf
    profiles:
      - postgres17

  # Replication setup with main and replica
  postgres_main:
    <<: *postgres
    image: postgres:13.20
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_main:/var/lib/postgresql/data
      - ./docker/postgresql_main.conf:/etc/postgresql/postgresql.conf
      - ./docker/pg_hba.conf:/etc/postgresql/pg_hba.conf
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      postgres_exporter:
        aliases:
          - postgres_main
    profiles:
      - replication

  postgres_replica:
    <<: *postgres
    image: postgres:13.20
    ports:
      - "5434:5432"
    volumes:
      - postgres_data_replica:/var/lib/postgresql/data
      - ./docker/postgresql_replica.conf:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGPASSWORD: postgres
      PGUSER: postgres
      PRIMARY_HOST: postgres_main
    entrypoint: []
    command: >
      bash -c "
      echo 'Waiting for postgres_main to be ready...' &&
      until pg_isready -h postgres_main -p 5432; do sleep 1; done &&
      echo 'postgres_main is ready, starting replication setup...' &&
      rm -rf /var/lib/postgresql/data/* &&
      pg_basebackup -h postgres_main -p 5432 -U postgres -D /var/lib/postgresql/data -Fp -Xs -P -v &&
      echo \"primary_conninfo = 'host=postgres_main port=5432 user=postgres password=postgres application_name=replica1'\" >> /var/lib/postgresql/data/postgresql.auto.conf &&
      touch /var/lib/postgresql/data/standby.signal &&
      chown -R postgres:postgres /var/lib/postgresql/data &&
      echo 'Starting PostgreSQL in replica mode...' &&
      exec docker-entrypoint.sh postgres -c config_file=/etc/postgresql/postgresql.conf
      "
    depends_on:
      - postgres_main
    networks:
      postgres_exporter:
        aliases:
          - postgres_replica
    profiles:
      - replication

  prometheus:
    <<: *network
    image: quay.io/prometheus/prometheus:v3.3.0@sha256:339ce86a59413be18d0e445472891d022725b4803fab609069110205e79fb2f1
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/docker/prometheus_data
    profiles:
      - default
      - replication

  postgres-exporter:
    <<: *network
    build:
      context: .
    command:
      [
        "--log.level=debug",
        "--log.format=logfmt",
        "--db.excluded-databases=rdsadmin",
        "--db.excluded-databases=cloudsqladmin",
      ]
    entrypoint: ["/bin/postgres_exporter"]
    ports:
      - "9187:9187"
    environment:
      - PGHOST=postgres
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGPGDATABASE=postgres
      - PGSSLMODE=disable
    profiles:
      - default

  postgres-exporter-main:
    <<: *network
    build:
      context: .
    command:
      [
        "--log.level=debug",
        "--log.format=logfmt",
        "--db.excluded-databases=rdsadmin",
        "--db.excluded-databases=cloudsqladmin",
      ]
    entrypoint: ["/bin/postgres_exporter"]
    ports:
      - "9187:9187"
    environment:
      - PGHOST=postgres_main
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGPGDATABASE=postgres
      - PGSSLMODE=disable
    profiles:
      - replication

  postgres-exporter-replica:
    <<: *network
    build:
      context: .
    command:
      [
        "--log.level=debug",
        "--log.format=logfmt",
        "--db.excluded-databases=rdsadmin",
        "--db.excluded-databases=cloudsqladmin",
      ]
    entrypoint: ["/bin/postgres_exporter"]
    ports:
      - "9188:9187"
    environment:
      - PGHOST=postgres_replica
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGPGDATABASE=postgres
      - PGSSLMODE=disable
    profiles:
      - replication

  grafana:
    <<: *network
    image: grafana/grafana:11.6.0@sha256:62d2b9d20a19714ebfe48d1bb405086081bc602aa053e28cf6d73c7537640dfb
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/etc/grafana/dashboards
    depends_on:
      - prometheus
    profiles:
      - default
      - replication

volumes:
  prometheus_data:
  grafana_data:
  postgres_data_13:
  postgres_data_14:
  postgres_data_15:
  postgres_data_16:
  postgres_data_17:
  postgres_data_main:
  postgres_data_replica:

networks:
  postgres_exporter:
