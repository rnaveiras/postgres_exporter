---
name: Build

on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # true when a push on the main branch
  PUSH_ARTIFACT: |
    ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'pull_request' }}

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  mod-tidy:
    name: mod-tidy
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: set up go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: 1.23.5
        id: go
      - name: go mod tidy
        run: go mod tidy
      - run: |
          if ! git diff --exit-code -- go.mod go.sum; then
            echo "Modules not tidy; please run 'go mod tidy'"
            exit 1
          fi;

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [mod-tidy]
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: set up go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: 1.23.5
        id: go
      - run: go version
      - name: Promu
        run: make promu
      - name: Build
        run: make build

  container:
    runs-on: ubuntu-latest
    needs: [mod-tidy, build]
    permissions:
      packages: write
      contents: read
    steps:
      - uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0
        with:
          install: true

      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        id: metadata
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=sha-,format=long
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}

      - uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6.14.0
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ env.PUSH_ARTIFACT }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
